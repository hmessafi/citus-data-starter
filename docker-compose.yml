version: "3.7"

x-database-config: &DATABASE_CONFIG
  DB_USER: ${DB_USER}
  DB_PASSWORD: ${DB_PASSWORD}
  DB_PORT: ${DB_PORT}
  DB_NAME: ${DB_NAME}
  DATABASE_URL: postgres://${DB_USER}:${DB_PASSWORD}@master:${DB_PORT}/${DB_NAME}

x-pgadmin-auth: &PGADMIN_AUTH
  PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
  PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
  PGHERO_USERNAME: ${PGADMIN_DEFAULT_EMAIL}
  PGHERO_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}

services:
  master:
    build:
      context: ./citus/
      dockerfile: DockerFile
      args:
        - HTTP_PROXY=${HTTP_PROXY}
    image: ${COMPOSE_PROJECT_NAME}_master
    container_name: ${COMPOSE_PROJECT_NAME}_master
    restart: on-failure
    networks:
      ors_dev:
        aliases:
          - db
          - master
          - ${COMPOSE_PROJECT_NAME}_db
          - ${COMPOSE_PROJECT_NAME}_master
    volumes:
      - ${VOLUME_PATH}/ors_db_data/master:/var/lib/postgres/data
    ports:
      - ${DB_PORT}:5432
    labels:
      - com.citusdata.role=Master
    environment:
      <<: *DATABASE_CONFIG
      CITUS_NODE: master

  worker:
    build:
      context: ./citus/
      dockerfile: DockerFile
      args:
        - HTTP_PROXY=${HTTP_PROXY}
    image: ${COMPOSE_PROJECT_NAME}_worker
    container_name: ${COMPOSE_PROJECT_NAME}_worker
    deploy:
      replicas: 4
    restart: on-failure
    networks:
      ors_dev:
        aliases:
          - worker
          - ${COMPOSE_PROJECT_NAME}_worker
    volumes:
      - ${VOLUME_PATH}/ors_db_data/worker:/var/lib/postgres/data
    labels:
      - com.citusdata.role=Worker
    depends_on:
      - manager
    environment:
      <<: *DATABASE_CONFIG
      CITUS_NODE: worker

  manager:
    image: citusdata/membership-manager:latest
    container_name: ${COMPOSE_PROJECT_NAME}_manager
    restart: on-failure
    networks:
      ors_dev:
        aliases:
          - manager
          - ${COMPOSE_PROJECT_NAME}_manager
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - master
    environment:
      <<: *DATABASE_CONFIG
      CITUS_HOST: ${COMPOSE_PROJECT_NAME}_master

  admin:
    build:
      context: ./admin/
      dockerfile: DockerFile
      args:
        <<: *DATABASE_CONFIG
        HTTP_PROXY: ${HTTP_PROXY}
    image: ${COMPOSE_PROJECT_NAME}_admin
    container_name: ${COMPOSE_PROJECT_NAME}_admin
    restart: on-failure
    networks:
      ors_dev:
        aliases:
          - admin
          - ${COMPOSE_PROJECT_NAME}_admin
    ports:
      - ${DB_ADMIN_PORT}:80
    environment:
      <<: *PGADMIN_AUTH
      PGADMIN_CONFIG_ENHANCED_COOKIE_PROTECTION: '"true"'

  dashboard:
    build:
      context: ./dashboard/
      dockerfile: DockerFile
      args:
        <<: *DATABASE_CONFIG
        HTTP_PROXY: ${HTTP_PROXY}
    image: ${COMPOSE_PROJECT_NAME}_dashboard
    container_name: ${COMPOSE_PROJECT_NAME}_dashboard
    restart: on-failure
    networks:
      ors_dev:
        aliases:
          - dashboard
          - ${COMPOSE_PROJECT_NAME}_dashboard
    ports:
      - ${DB_DASHBOARD_PORT}:8080
    environment:
      <<: *DATABASE_CONFIG
      <<: *PGADMIN_AUTH

networks:
  ors_dev: {}
